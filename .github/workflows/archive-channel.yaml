name: archive-channel-on-PR-close

on:
  pull_request:
    types:
      - closed

env:
  REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
  REPLICATED_APP: ${{ secrets.REPLICATED_APP }}
  REPLICATED_APP_ID: ${{ secrets.REPLICATED_APP_ID }}
  
jobs: 
  archive-vendor-channel:
    runs-on: ubuntu-latest
    steps:

    - name: Get branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: get_branch
      
    - name: archive-channel
      shell: bash
      run: |

      

        jq --version
        
        BRANCH_NAME="${{ steps.get_branch.outputs.branch }}"
        echo "Branch name is: $BRANCH_NAME"

        # Mock expired api token
        #REPLICATED_API_TOKEN=e3beb38d236576afd11dca62d8018acb2879d245c7067e47db1947dac0778311

        AUTH="Authorization: $REPLICATED_API_TOKEN"
       

        API_CHECK=`curl --request GET --url https://api.replicated.com/vendor/v3/app/"$REPLICATED_APP_ID"/channels --header "$AUTH"  --header 'accept: application/json'`

        
        if [ -z "$API_CHECK" ]; then
          echo "authentication failed...check if Replicated API token has expired in Vendor Portal"
          exit 1
        fi
        

        CHANNEL_NAME=`curl --request GET --url https://api.replicated.com/vendor/v3/app/"$REPLICATED_APP_ID"/channels --header "$AUTH" --header 'accept: application/json' | jq -r --arg queryname $BRANCH_NAME '.channels[] | select(.channelSlug == $queryname).channelSlug'`

        if [ -z "$CHANNEL_NAME" ]; then
            echo "Channel name is not present"

        else [ $CHANNEL_NAME == $BRANCH_NAME ]
            echo "Channel Name exists -- $CHANNEL_NAME"
            echo "Fetching Channel_ID ..."
            CHANNEL_ID=`curl --request GET --url https://api.replicated.com/vendor/v3/app/"$REPLICATED_APP_ID"/channels --header "$AUTH" --header 'accept: application/json'  | jq -r --arg queryname $BRANCH_NAME '.channels[] | select(.channelSlug == $queryname).id'`

            if [ -n "$CHANNEL_ID" ]; then
                echo "Channel_ID  fetched"
                echo "Channel_ID is: $CHANNEL_ID"

                RESPONSE=$(curl --write-out %{http_code} --silent --request DELETE --url https://api.replicated.com/vendor/v3/app/"$REPLICATED_APP_ID"/channel/$CHANNEL_ID --header "$AUTH")

                if [[ "$RESPONSE" -ne 200 ]]; then
                    echo ""
                    echo "Results: Something went wrong; $CHANNEL_NAME exists but was not archived"
                    exit 1
                else
                    echo ""
                    echo "Results: $BRANCH_NAME channel successfully archived"
                fi
            fi
        fi



