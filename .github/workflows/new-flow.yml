name: archive-vendor-port-channel-on-PR-close

on:
  pull_request:
    types:
      - closed

env:
  REPLICATED_API_TOKEN: ${{ secrets.REPLICATED_API_TOKEN }}
  REPLICATED_APP: ${{ secrets.REPLICATED_APP }}
  

jobs:
  archive-vendor-channel:
    runs-on: ubuntu-latest
    steps:

    - name: Get branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: get_branch
      
    - name: archive-channel
      shell: bash
      run: |
        # Download / install replicated cli
        curl -s https://api.github.com/repos/replicatedhq/replicated/releases/latest \
        | grep "browser_download_url.*linux_amd64.tar.gz" \
        | cut -d : -f 2,3 \
        | tr -d \" \
        | wget -O replicated.tar.gz -qi -
        tar xf replicated.tar.gz replicated && rm replicated.tar.gz
        mv replicated /usr/local/bin/replicated

        # Assign branch name to variable
        BRANCH_NAME="${{ steps.get_branch.outputs.branch }}"
        echo "Branch name is: $BRANCH_NAME"
        CHANNEL_ID=`replicated channel  ls | grep $BRANCH_NAME | awk '{ print $1 }'`
        echo "Channel_ID is: $CHANNEL_ID"
        
        # Archive channel
        replicated channel rm $(replicated channel  ls | grep $BRANCH_NAME | awk '{ print $1 }')

        if [ $? -ne 0 ]; then
        echo "$BRANCH_NAME channel does not exist in Replicated Vendor Portal in REPLICATED_APP slug"
        else
        echo ""
        echo ""
        echo "+++++++++++++++++++++++++++++++++++++++++++"
        echo "$BRANCH_NAME channel successfully archived"
        echo "+++++++++++++++++++++++++++++++++++++++++++"

        fi
        





